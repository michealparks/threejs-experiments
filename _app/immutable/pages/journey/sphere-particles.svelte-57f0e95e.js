import{S,i as _,s as b,e as z,c as y,a as A,d as u,b as v,g as x,n as m,w as I,R as P}from"../../chunks/index-9379afd2.js";import{G as B,B as G,b as O,w as k,A as C,P as D}from"../../chunks/gl-bd6de290.js";import{O as L}from"../../chunks/orbitControls-dc05221c.js";import{t as M}from"../../chunks/tweakpane-ca0b34f5.js";import{r as $}from"../../chunks/util-d1e0476c.js";function q(p){let t;return{c(){t=z("div"),this.h()},l(s){t=y(s,"DIV",{class:!0}),A(t).forEach(u),this.h()},h(){v(t,"class","pane")},m(s,r){x(s,t,r),p[1](t)},p:m,i:m,o:m,d(s){s&&u(t),p[1](null)}}}function E(p,t,s){let r;const i={count:1e3,pointSize:.02,sphereSize:3};let c,a,l;const d=e=>{l&&(c.dispose(),a.dispose(),e.remove(l)),c=new G;const o=new Float32Array(i.count*3);for(let n=0;n<i.count*3;n+=3){const[h,g,w]=$(i.sphereSize);o[n+0]=h,o[n+1]=g,o[n+2]=w}c.setAttribute("position",new O(o,3)),a=new k,a.size=i.pointSize,a.sizeAttenuation=!0,a.depthWrite=!1,a.blending=C,l=new D(c,a),e.add(l)};I(async()=>{const e=B(),o=new L(e.camera,e.canvas);o.minDistance=-1/0,d(e.scene);const n=new M.exports.Pane({container:r});n.addInput(i,"count",{min:100,max:1e6,step:100}),n.addInput(i,"pointSize",{min:.001,max:.1,step:.001}),n.addInput(i,"sphereSize",{min:1,max:100,step:1}),n.on("change",()=>d(e.scene)),e.setAnimationLoop(()=>{o.update()})});function f(e){P[e?"unshift":"push"](()=>{r=e,s(0,r)})}return[r,f]}class H extends S{constructor(t){super(),_(this,t,E,q,b,{})}}export{H as default};
