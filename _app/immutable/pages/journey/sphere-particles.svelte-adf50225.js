import{S as g,i as w,s as S,e as z,c as A,a as I,d as u,b as x,g as v,n as m,w as y,R as P}from"../../chunks/index-9379afd2.js";import{G as B,B as G,b as N,w as E,A as O,P as k}from"../../chunks/gl-9f8be024.js";import{O as C}from"../../chunks/orbit-controls-153fff9d.js";import{t as D}from"../../chunks/tweakpane-ca06611a.js";import{r as F}from"../../chunks/util-55b26ced.js";function L(p){let t;return{c(){t=z("div"),this.h()},l(s){t=A(s,"DIV",{class:!0}),I(t).forEach(u),this.h()},h(){x(t,"class","pane")},m(s,r){v(s,t,r),p[1](t)},p:m,i:m,o:m,d(s){s&&u(t),p[1](null)}}}function M(p,t,s){let r;const a={count:1e3,pointSize:.02,sphereSize:3};let c,i,l;const d=e=>{l&&(c.dispose(),i.dispose(),e.remove(l)),c=new G;const o=new Float32Array(a.count*3);for(let n=0;n<a.count*3;n+=3){const[h,_,b]=F(a.sphereSize);o[n+0]=h,o[n+1]=_,o[n+2]=b}c.setAttribute("position",new N(o,3)),i=new E,i.size=a.pointSize,i.sizeAttenuation=!0,i.depthWrite=!1,i.blending=O,l=new k(c,i),e.add(l)};y(async()=>{const e=B(),o=new C(e.camera,e.canvas);o.minDistance=Number.NEGATIVE_INFINITY,d(e.scene);const n=new D.exports.Pane({container:r});n.addInput(a,"count",{min:100,max:1e6,step:100}),n.addInput(a,"pointSize",{min:.001,max:.1,step:.001}),n.addInput(a,"sphereSize",{min:1,max:100,step:1}),n.on("change",()=>d(e.scene)),e.setAnimationLoop(()=>{o.update()})});function f(e){P[e?"unshift":"push"](()=>{r=e,s(0,r)})}return[r,f]}class W extends g{constructor(t){super(),w(this,t,M,L,S,{})}}export{W as default};
