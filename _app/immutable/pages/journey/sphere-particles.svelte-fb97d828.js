import{S as _,i as g,s as h,x as $,y as z,z as S,n as A,r as w,p as b,C as x}from"../../chunks/index-9379afd2.js";import{G as y,B as P,b as v,v as B,A as G,P as I}from"../../chunks/gl-748db77b.js";import{O as N}from"../../chunks/orbit-controls-2df194a2.js";import{r as C}from"../../chunks/util-55b26ced.js";import{P as O}from"../../chunks/Pane-0c3fb31b.js";function E(r){let e,o;return e=new O({props:{parameters:r[0],inputs:r[1]}}),e.$on("change",r[4]),{c(){$(e.$$.fragment)},l(t){z(e.$$.fragment,t)},m(t,n){S(e,t,n),o=!0},p:A,i(t){o||(w(e.$$.fragment,t),o=!0)},o(t){b(e.$$.fragment,t),o=!1},d(t){x(e,t)}}}function F(r){const e={count:1e3,pointSize:.02,sphereSize:3},o={count:{min:100,max:1e6,step:100},pointSize:{min:.001,max:.1,step:.001},sphereSize:{min:1,max:100,step:1}};let t,n,i;const m=u=>{i&&(t.dispose(),n.dispose(),u.remove(i)),t=new P;const p=new Float32Array(e.count*3);for(let a=0;a<e.count*3;a+=3){const[l,f,d]=C(e.sphereSize);p[a+0]=l,p[a+1]=f,p[a+2]=d}t.setAttribute("position",new v(p,3)),n=new B,n.size=e.pointSize,n.sizeAttenuation=!0,n.depthWrite=!1,n.blending=G,i=new I(t,n),u.add(i)},s=y(),c=new N(s.camera,s.canvas);return c.minDistance=Number.NEGATIVE_INFINITY,m(s.scene),s.setAnimationLoop(()=>{c.update()}),[e,o,m,s,()=>m(s.scene)]}class W extends _{constructor(e){super(),g(this,e,F,E,h,{})}}export{W as default};
