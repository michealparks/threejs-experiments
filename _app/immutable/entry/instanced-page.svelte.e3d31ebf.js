import{S as e,i as t,s as r}from"../chunks/index.6b6f0a4a.js";import{o as a,p as n,F as s,q as o,L as i,r as l,v as c,A as u,D as d,b as h,I as f,t as p,u as m}from"../chunks/trzy.81d23169.js";class g extends a{constructor(e){super(e),this.type=n}parse(e){const t=function(e,t){switch(e){case 1:console.error("THREE.RGBELoader Read Error: "+(t||""));break;case 2:console.error("THREE.RGBELoader Write Error: "+(t||""));break;case 3:console.error("THREE.RGBELoader Bad File Format: "+(t||""));break;default:console.error("THREE.RGBELoader: Error: "+(t||""))}return-1},r=function(e,t,r){t=t||1024;let a=e.pos,n=-1,s=0,o="",i=String.fromCharCode.apply(null,new Uint16Array(e.subarray(a,a+128)));for(;0>(n=i.indexOf("\n"))&&s<t&&a<e.byteLength;)o+=i,s+=i.length,a+=128,i+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(a,a+128)));return-1<n&&(!1!==r&&(e.pos+=s+n+1),o+i.slice(0,n))},a=function(e,t,r,a){const n=e[t+3],s=Math.pow(2,n-128)/255;r[a+0]=e[t+0]*s,r[a+1]=e[t+1]*s,r[a+2]=e[t+2]*s,r[a+3]=1},i=function(e,t,r,a){const n=e[t+3],s=Math.pow(2,n-128)/255;r[a+0]=o.toHalfFloat(Math.min(e[t+0]*s,65504)),r[a+1]=o.toHalfFloat(Math.min(e[t+1]*s,65504)),r[a+2]=o.toHalfFloat(Math.min(e[t+2]*s,65504)),r[a+3]=o.toHalfFloat(1)},l=new Uint8Array(e);l.pos=0;const c=function(e){const a=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,n=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,o=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,i={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;if(e.pos>=e.byteLength||!(l=r(e)))return t(1,"no header found");if(!(c=l.match(/^#\?(\S+)/)))return t(3,"bad initial token");for(i.valid|=1,i.programtype=c[1],i.string+=l+"\n";l=r(e),!1!==l;)if(i.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(a))&&(i.gamma=parseFloat(c[1])),(c=l.match(n))&&(i.exposure=parseFloat(c[1])),(c=l.match(s))&&(i.valid|=2,i.format=c[1]),(c=l.match(o))&&(i.valid|=4,i.height=parseInt(c[1],10),i.width=parseInt(c[2],10)),2&i.valid&&4&i.valid)break}else i.comments+=l+"\n";return 2&i.valid?4&i.valid?i:t(3,"missing image size specifier"):t(3,"missing format specifier")}(l);if(-1!==c){const e=c.width,r=c.height,o=function(e,r,a){const n=r;if(n<8||n>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);if(n!==(e[2]<<8|e[3]))return t(3,"wrong scanline width");const s=new Uint8Array(4*r*a);if(!s.length)return t(4,"unable to allocate buffer space");let o=0,i=0;const l=4*n,c=new Uint8Array(4),u=new Uint8Array(l);let d=a;for(;d>0&&i<e.byteLength;){if(i+4>e.byteLength)return t(1);if(c[0]=e[i++],c[1]=e[i++],c[2]=e[i++],c[3]=e[i++],2!=c[0]||2!=c[1]||(c[2]<<8|c[3])!=n)return t(3,"bad rgbe scanline format");let r,a=0;for(;a<l&&i<e.byteLength;){r=e[i++];const n=r>128;if(n&&(r-=128),0===r||a+r>l)return t(3,"bad scanline data");if(n){const t=e[i++];for(let e=0;e<r;e++)u[a++]=t}else u.set(e.subarray(i,i+r),a),a+=r,i+=r}const h=n;for(let e=0;e<h;e++){let t=0;s[o]=u[e+t],t+=n,s[o+1]=u[e+t],t+=n,s[o+2]=u[e+t],t+=n,s[o+3]=u[e+t],o+=4}d--}return s}(l.subarray(l.pos),e,r);if(-1!==o){let t,l,u;switch(this.type){case s:u=o.length/4;const e=new Float32Array(4*u);for(let t=0;t<u;t++)a(o,4*t,e,4*t);t=e,l=s;break;case n:u=o.length/4;const r=new Uint16Array(4*u);for(let t=0;t<u;t++)i(o,4*t,r,4*t);t=r,l=n;break;default:console.error("THREE.RGBELoader: unsupported type: ",this.type)}return{width:e,height:r,data:t,header:c.string,gamma:c.gamma,exposure:c.exposure,type:l}}}return null}setDataType(e){return this.type=e,this}load(e,t,r,a){return super.load(e,(function(e,r){switch(e.type){case s:case n:e.colorSpace=i,e.minFilter=l,e.magFilter=l,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,r)}),r,a)}}function y(e){const{scene:t,camera:r,renderer:a}=c(),n="https://threejs.org/examples/textures/equirectangular/venice_sunset_1k.hdr";return(async()=>{const e=new u;t.add(e);const s=new d;t.add(s),r.position.set(1,.8,1),r.lookAt(0,0,0);const[o,i]=await Promise.all([(new g).loadAsync(n),h("glb/mug.glb")]),l=i.scene.getObjectByName("Mug"),c=new f(l.geometry,l.material,300),y=new p;let w=0;for(;w<300;)y.setPosition(8*Math.random()-4,8*Math.random()-4,8*Math.random()-4),c.setMatrixAt(w,y),w+=1;t.add(c);const b=new m(a);b.compileEquirectangularShader();const E=b.fromEquirectangular(o).texture;t.background=E,t.environment=E})(),[]}class w extends e{constructor(e){super(),t(this,e,y,null,r,{})}}export{w as default};
