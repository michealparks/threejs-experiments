import{S as t,i as e,s}from"../chunks/index.6b6f0a4a.js";import{O as a,I as o,v as r,A as n,H as i,D as c,M as l,b as p}from"../chunks/trzy.81d23169.js";import{r as m,a as d}from"../chunks/util.21cdfddc.js";import{c as u}from"../chunks/util-three.a94fd93c.js";const y=100,f=new a,w=[],h=(t,e)=>{const s=3*t,[a,o]=d(1.25);e.p[s+0]=a,e.p[s+1]=m(.1,.75),e.p[s+2]=o,e.s[t]=1,e.sv[t]=m(-.1,-.03),e.pv[s+0]=m(-.01,.05),e.pv[s+1]=m(.01,.05),e.pv[s+2]=m(-.01,.05)},b=(t,e)=>{for(const s of e){if(s.matrixAutoUpdate=!0,s.position.set(0,0,0),Array.isArray(s.material))throw new TypeError("Material can not be array");const e=new o(s.geometry.clone(),s.material.clone(),y),a={mesh:e,p:new Float32Array(300),r:new Float32Array(300),s:new Float32Array(y),pv:new Float32Array(300),sv:new Float32Array(300)};e.position.set(0,.5,0);let r=0;for(;r<y;)h(r,a),r+=1;w.push(a),t.add(e)}},v=()=>{for(const t of w){const{mesh:e,p:s,s:a,pv:o,sv:r}=t;let n=0;for(;n<y;){const i=3*n;a[n]+=r[n],a[n]<=0&&h(n,t),s[i+0]+=o[i+0],s[i+1]+=o[i+1],s[i+2]+=o[i+2],f.position.set(s[i],s[i+1],s[i+2]),f.scale.set(a[n],a[n],a[n]),f.updateMatrix(),e.setMatrixAt(n,f.matrix),n+=1}e.instanceMatrix.needsUpdate=!0}};function A(t){const{scene:e,camera:s,update:a}=r();return(async()=>{s.position.set(20,4,18),s.lookAt(0,0,0);const t=new n(void 0,1);e.add(t);const o=new i;o.color.setHSL(.6,1,.6),o.groundColor.setHSL(.095,1,.75),e.add(o),o.position.set(0,50,0);const r=new c;r.color.setHSL(.1,1,.95),r.position.set(-1,1.75,1).multiplyScalar(30),e.add(r);const m=u(void 0,64);e.add(m);const d={h:0,s:0,l:0};m.material instanceof l&&m.material.color.getHSL(d);let{l:y}=d,f=1e-4,w=1e-4;const{scene:h}=await p("glb/FloatingRockScene.glb");b(h.getObjectByName("Fire"),[h.getObjectByName("Ember1"),h.getObjectByName("Ember2"),h.getObjectByName("Ember3")]),e.add(h),a((()=>{y-=w,(y<0||y>1)&&(f=-f,w=f,y<=0&&(y=0),y>=1&&(y=1)),t.intensity=y,m.material instanceof l&&m.material.color.setHSL(d.h,d.s,y),v()}))})(),[]}class g extends t{constructor(t){super(),e(this,t,A,null,s,{})}}export{g as default};
