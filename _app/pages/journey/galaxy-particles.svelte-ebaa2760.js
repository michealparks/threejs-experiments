import{S as n,i as a,s,e as t,k as o,c as e,a as r,d as i,n as d,b as u,f as c,H as p,z as m,aq as h,N as l,ar as w,as as f,at as v,au as b,av as x,aw as M}from"../../chunks/vendor-9ca6b265.js";import{G as I}from"../../chunks/gl-cd0d002a.js";import{O as C}from"../../chunks/orbitControls-db97e473.js";function A(n){let a,s,m;return{c(){a=t("canvas"),s=o(),m=t("div"),this.h()},l(n){a=e(n,"CANVAS",{}),r(a).forEach(i),s=d(n),m=e(n,"DIV",{class:!0}),r(m).forEach(i),this.h()},h(){u(m,"class","pane")},m(t,o){c(t,a,o),n[2](a),c(t,s,o),c(t,m,o),n[3](m)},p:p,i:p,o:p,d(t){t&&i(a),n[2](null),t&&i(s),t&&i(m),n[3](null)}}}function P(n,a,s){var t=this&&this.__awaiter||function(n,a,s,t){return new(s||(s=Promise))((function(o,e){function r(n){try{d(t.next(n))}catch(a){e(a)}}function i(n){try{d(t.throw(n))}catch(a){e(a)}}function d(n){var a;n.done?o(n.value):(a=n.value,a instanceof s?a:new s((function(n){n(a)}))).then(r,i)}d((t=t.apply(n,a||[])).next())}))};let o,e;const r={count:1e4,pointSize:.001,radius:5,branches:3,spin:1,randomness:.38,randomnessPower:3,insideColor:"#ff6030",outsideColor:"#1b3984"};let i=null,d=null,u=null;const c=n=>{null!==u&&(i.dispose(),d.dispose(),n.remove(u)),i=new w;const a=new Float32Array(3*r.count),s=new Float32Array(3*r.count),t=new f(r.insideColor),o=new f(r.outsideColor);for(let e=0,i=0;e<3*r.count;e+=1,i=3*e){const n=Math.random()*r.radius,d=n*r.spin,u=e%r.branches/r.branches*Math.PI*2,c=Math.pow(Math.random(),r.randomnessPower)*(Math.random()<.5?1:-1)*r.randomness*n,p=Math.pow(Math.random(),r.randomnessPower)*(Math.random()<.5?1:-1)*r.randomness*n,m=Math.pow(Math.random(),r.randomnessPower)*(Math.random()<.5?1:-1)*r.randomness*n;a[i+0]=Math.cos(u+d)*n+c,a[i+1]=p,a[i+2]=Math.sin(u+d)*n+m;const h=t.clone();h.lerp(o,n/r.radius),s[i+0]=h.r,s[i+1]=h.g,s[i+2]=h.b}i.setAttribute("position",new v(a,3)),i.setAttribute("color",new v(s,3)),d=new b,d.size=r.pointSize,d.sizeAttenuation=!0,d.depthWrite=!1,d.blending=x,d.vertexColors=!0,u=new M(i,d),n.add(u)};return m((()=>t(void 0,void 0,void 0,(function*(){const n=new I(o),a=new C(n.camera,n.canvas);a.minDistance=-1/0,yield n.init(),c(n.scene);const s=new h.exports.Pane({container:e});s.addInput(r,"count",{min:100,max:1e6,step:100}),s.addInput(r,"pointSize",{min:.001,max:.1,step:.001}),s.addInput(r,"radius",{min:.1,max:10,step:.01}),s.addInput(r,"branches",{min:2,max:20,step:1}),s.addInput(r,"spin",{min:-5,max:5,step:.001}),s.addInput(r,"randomness",{min:0,max:2,step:.001}),s.addInput(r,"randomnessPower",{min:1,max:10,step:.001}),s.addInput(r,"insideColor"),s.addInput(r,"outsideColor"),s.on("change",(()=>c(n.scene))),n.setAnimationLoop((n=>{a.update()}))})))),[o,e,function(n){l[n?"unshift":"push"]((()=>{o=n,s(0,o)}))},function(n){l[n?"unshift":"push"]((()=>{e=n,s(1,e)}))}]}export default class extends n{constructor(n){super(),a(this,n,P,A,s,{})}}
